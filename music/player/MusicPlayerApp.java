
package music.player;

// imports
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.Clip;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 * Wav Music Player App.
 * Lets you choose a song in wav format from your computer to listen to.
 *@author JV RENZ CIMAFRANCA
 * 
 */
public class MusicPlayerApp extends javax.swing.JFrame {

    /**
     * Method to initialize GUI components
     * @throws javax.sound.sampled.UnsupportedAudioFileException
     */
    public MusicPlayerApp() throws UnsupportedAudioFileException {
        initComponents();
    }
    
    // variable declaration
    static MusicLoader player = MusicLoader.getInstance();
    //static String filePath = "3.wav";
    static String filePath;
    static String fileName;
    static long clipTimePosition;
    String file;
    static boolean isPlaying = true;
    static boolean isRepeating = false;
    static boolean isLoaded = true;
     
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        songLabel = new javax.swing.JLabel();
        playButton = new javax.swing.JButton();
        restartButton = new javax.swing.JButton();
        repeatButton = new javax.swing.JButton();
        chooseFileButton = new javax.swing.JButton();
        musicPlayerTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setForeground(java.awt.Color.red);

        songLabel.setBackground(java.awt.Color.lightGray);
        songLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        songLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        playButton.setBackground(java.awt.Color.lightGray);
        playButton.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        playButton.setText("Play");
        playButton.setMaximumSize(new java.awt.Dimension(95, 26));
        playButton.setMinimumSize(new java.awt.Dimension(95, 25));
        playButton.setPreferredSize(new java.awt.Dimension(95, 25));
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        restartButton.setBackground(java.awt.Color.lightGray);
        restartButton.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        restartButton.setText("Restart");
        restartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartButtonActionPerformed(evt);
            }
        });

        repeatButton.setBackground(java.awt.Color.lightGray);
        repeatButton.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        repeatButton.setText("Repeat");
        repeatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repeatButtonActionPerformed(evt);
            }
        });

        chooseFileButton.setBackground(java.awt.Color.red);
        chooseFileButton.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        chooseFileButton.setText("Choose File");
        chooseFileButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        chooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileButtonActionPerformed(evt);
            }
        });

        musicPlayerTitle.setBackground(new java.awt.Color(255, 255, 255));
        musicPlayerTitle.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        musicPlayerTitle.setForeground(new java.awt.Color(255, 0, 102));
        musicPlayerTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        musicPlayerTitle.setText("WAV Music Player");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(songLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(musicPlayerTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(restartButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(repeatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(chooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(musicPlayerTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(songLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(repeatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(restartButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chooseFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // Button Functions
    /**
     * Play/pause button
     * Button to play or pause the song
     * Changes the name of button to "Pause" if song is playing
     * "Play" if song is on pause
     * @param evt 
     */
    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        
        if(isPlaying){
            System.out.println("Play");
            player.clip.setMicrosecondPosition(clipTimePosition);
            player.clip.start();
            playButton.setText("Pause");
        }
        
        else{
            System.out.println("Pause");
            clipTimePosition = player.clip.getMicrosecondPosition();
            player.clip.stop();
            playButton.setText("Play");
        }
        isPlaying = !isPlaying;
        
    }//GEN-LAST:event_playButtonActionPerformed
    /**
     * Restart Button
     * Button to play the music from the start
     * @param evt 
     */
    private void restartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartButtonActionPerformed
        
        System.out.println("Restart");
        player.clip.setMicrosecondPosition(0);
        clipTimePosition = 0;
        player.clip.start();
        
        
    }//GEN-LAST:event_restartButtonActionPerformed
    
    /**
     * Repeat Button
     * Button to continuously repeat the song 
     * @param evt 
     */
    private void repeatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repeatButtonActionPerformed
        
        if(!isRepeating){
            System.out.println("Repeating");
            repeatButton.setText("Repeat: On");
            player.clip.loop(Clip.LOOP_CONTINUOUSLY);
            
            
        }
        else{
            repeatButton.setText("Repeat: Off");
            System.out.println("Not Repeating");
            player.clip.loop(0);
            
        }
        isRepeating = !isRepeating;
    }//GEN-LAST:event_repeatButtonActionPerformed
    /**
     * Choose File Button
     * Lets you choose a song in wav format from your computer to play in the music player
     * @param evt 
     */
    private void chooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileButtonActionPerformed
        // Uses the JFileChooser to select the song file in computer
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("C:\\Users\\ACER\\Music"));
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setFileFilter(new FileNameExtensionFilter("wav files","wav"));
            
            if(fileChooser.showOpenDialog(null)== JFileChooser.APPROVE_OPTION){
                
                fileName=fileChooser.getSelectedFile().getName();
                
                filePath=fileChooser.getSelectedFile().getPath();  
            }
            
            // Loads the music    
            try {
                MusicLoader.loadMusic(filePath);
                
            } catch (UnsupportedAudioFileException ex) {
                
                Logger.getLogger(MusicPlayerApp.class.getName()).log(Level.SEVERE, null, ex);
            }  
            
            if (fileName == null){
                
                System.out.println("No Loaded Song");                
            }
            
            else{
                player.clip.setMicrosecondPosition(clipTimePosition);
                player.clip.start();
                isPlaying = false;
                playButton.setText("Pause");
                
                songLabel.setText("Now Playing:      "+fileName);
                System.out.println(fileName + " Successfully Loaded");
                fileName = null;
                
            }      
        
    }//GEN-LAST:event_chooseFileButtonActionPerformed

    /**
     * Main method of the app.
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MusicPlayerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        //</editor-fold>
        // Launches the application
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            
            try {
                MusicPlayerApp musicPlayerGui = new MusicPlayerApp();
                musicPlayerGui.setVisible(true);
                musicPlayerGui.setResizable(false);
                musicPlayerGui.setLocationRelativeTo(null);
            }
            
            catch (UnsupportedAudioFileException ex) {
                Logger.getLogger(MusicPlayerApp.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        );
        System.out.println("Application Launched Successfully");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JLabel musicPlayerTitle;
    private javax.swing.JButton playButton;
    private javax.swing.JButton repeatButton;
    private javax.swing.JButton restartButton;
    private javax.swing.JLabel songLabel;
    // End of variables declaration//GEN-END:variables

}
